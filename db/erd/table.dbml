Table Users as U {
  id int [pk, increment, not null] // auto-increment
  login_id varchar(50) [not null, unique]
  password varchar(100) [not null]
  kor_name varchar(50) [not null]
  eng_name varchar(50) [not null]
  profile_image varchar [not null]
  email varchar(50) [not null, unique]
  external_email varchar(50) [unique]
  introduction varchar(150)
  description varchar(800) 
  nickname varchar(100) [not null]
  website_url varchar
  created_at timestamp [not null, default: `now()`]
  updated_at timestamp [default:`now()`]//ON UPDATE CURRENT_TIMESTAMP
}

Table User_Admin as UA {
  id int [pk, increment, not null] // auto-increment
  users_id int [not null, ref: - U.id]
  created_at timestamp [not null, default: `now()`]
  updated_at timestamp [default:`now()`]//ON UPDATE CURRENT_TIMESTAMP
}

Table Works_Posting as WP {
  id int [pk, increment, not null]
  user_id int [not null, ref: > U.id]
  category_id int [not null, ref: > WC.id]
  title varchar(100) [not null]
  content varchar
  view_count int [default: 0]
  scheduled_at timestamp
  created_at timestamp [not null, default: `now()`]
  updated_at timestamp [default:`now()`]//ON UPDATE CURRENT_TIMESTAMP
  status_id int [not null, ref:> PS.id]
}

Table Works_Category as WC {
  id int [pk, increment] // auto-increment
  category_name varchar [not null]
  eng_category_name varchar [not null]
  // illustration, photo, painting, design, calligraphy, animation, sound, sculpture_craft, artist
  created_at timestamp [not null, default: `now()`]
  updated_at timestamp [default:`now()`]//ON UPDATE CURRENT_TIMESTAMP
}

Table upload_file as UF{
  id int [pk, increment] // auto-increment
  posting_id int [not null, ref:> WP.id]
  file_sort_id int [not null, ref:> FS.id]
  upload_url varchar [not null]
  created_at timestamp [not null, default: `now()`]
  updated_at timestamp [default:`now()`]//ON UPDATE CURRENT_TIMESTAMP
}

Table file_sort as FS{
  id int [pk, increment] // auto-increment
  file_sort varchar [not null]
  // image, sound, video, picture_book, wallpaper
  created_at timestamp [not null, default: `now()`]
  updated_at timestamp [default:`now()`]//ON UPDATE CURRENT_TIMESTAMP
}

Table public_status as PS{
  id int [pk, increment]
  status varchar(50) [not null]
  created_at timestamp [not null, default: `now()`]
  updated_at timestamp [default:`now()`]//ON UPDATE CURRENT_TIMESTAMP
}

Table Works_Posting_tags as WPT {
  id int [pk, increment]
  tag_id int [not null, ref:> WTN.id]
  posting_id int [not null, ref:> WP.id]
  created_at timestamp [not null, default: `now()`]
  updated_at timestamp [default:`now()`]//ON UPDATE CURRENT_TIMESTAMP
}

Table Works_tag_names as WTN {
  id int [pk, increment]
  name varchar [not null]
  created_at timestamp [not null, default: `now()`]
  updated_at timestamp [default:`now()`]//ON UPDATE CURRENT_TIMESTAMP
}


Table Comment as CO{
  id int [pk, increment]
  user_id int [ref: > U.id]
  posting_id int [ref: > WP.id]
  parent_comment_id int [ref: > CO.id]
  comment varchar(1000)
  created_at timestamp [not null, default: `now()`]
  updated_at timestamp [default:`now()`]//ON UPDATE CURRENT_TIMESTAMP
}

Table Works_Sympathy as WS {
  id tinyint [pk, increment]
  sympathy_sort varchar(50) [not null]
  // like, touched, expected, want_to_buy
  created_at timestamp [not null, default: `now()`]
  updated_at timestamp [default:`now()`]//ON UPDATE CURRENT_TIMESTAMP
}

Table Works_Sympathy_Count as WSC {
  id int [pk, increment]
  user_id int [not null, ref:> U.id]
  sympathy_id tinyint [not null, ref: > WS.id]
  posting_id int [not null, ref: > WP.id]
  created_at timestamp [not null, default: `now()`]
  updated_at timestamp [default:`now()`]//ON UPDATE CURRENT_TIMESTAMP
}

Table Notice {
  id int [pk, increment]
  User_Admin_id int [ref: > User_Admin.id]
  title varchar
  content varchar
  created_at timestamp [not null, default: `now()`]
  updated_at timestamp [default:`now()`]//ON UPDATE CURRENT_TIMESTAMP
}

Table Follow as FW {
  id int [pk, increment]
  following_id int [not null, ref:> U.id]
  follower_id int [not null, ref:> U.id]
  created_at timestamp [not null, default: `now()`]
  updated_at timestamp [default:`now()`]//ON UPDATE CURRENT_TIMESTAMP
}